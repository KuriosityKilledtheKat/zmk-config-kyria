---
include:
  - template: 'Jobs/Code-Intelligence.gitlab-ci.yml'
  - template: 'Security/Container-Scanning.gitlab-ci.yml'
  - template: 'Security/Dependency-Scanning.gitlab-ci.yml'
  - template: 'Security/License-Scanning.gitlab-ci.yml'
  - template: 'Security/SAST.gitlab-ci.yml'
  - template: 'Security/Secret-Detection.gitlab-ci.yml'
  - template: 'Workflows/MergeRequest-Pipelines.gitlab-ci.yml'

container_scanning:
  variables:
    DOCKERFILE_PATH: Dockerfile
    DOCKER_IMAGE: $CONTAINER_IMAGE
    GIT_STRATEGY: fetch

variables:
  ZMK_BUILD_IMAGE: $CI_REGISTRY_IMAGE/zmk-build-arm
  CONTAINER_IMAGE: $ZMK_BUILD_IMAGE:$CI_COMMIT_SHA

build_image:
  image:
    name: gcr.io/kaniko-project/executor:v1.7.0-debug
    entrypoint: [""]
  stage: build
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --cache --context "${CI_PROJECT_DIR}" --dockerfile "${CI_PROJECT_DIR}/Dockerfile" --destination "${CONTAINER_IMAGE}"

# Use container image to build firmware
# Keep firmware as artifact
