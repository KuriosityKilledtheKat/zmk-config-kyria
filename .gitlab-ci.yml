---
include:
  - template: 'Jobs/Code-Intelligence.gitlab-ci.yml'
  - template: 'Security/Container-Scanning.gitlab-ci.yml'
  - template: 'Security/Dependency-Scanning.gitlab-ci.yml'
  - template: 'Security/License-Scanning.gitlab-ci.yml'
  - template: 'Security/SAST.gitlab-ci.yml'
  - template: 'Security/Secret-Detection.gitlab-ci.yml'
  - template: 'Workflows/MergeRequest-Pipelines.gitlab-ci.yml'

container_scanning:
  variables:
    GIT_STRATEGY: fetch
    DOCKERFILE_PATH: ./Dockerfile

variables:
  ZMK_BUILD_IMAGE: $CI_REGISTRY_IMAGE/zmk-build-arm
  DOCKER_IMAGE: $ZMK_BUILD_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA

build image:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  script:
    - docker info
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker pull $DOCKER_IMAGE || true
    - docker pull $ZMK_BUILD_IMAGE:cache || true
    - docker build -t $DOCKER_IMAGE .
    - docker push $DOCKER_IMAGE

push image cache:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  needs:
    - build image
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  variables:
    DOCKER_IMAGE_TAG: $ZMK_BUILD_IMAGE:cache
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker pull $DOCKER_IMAGE
    - docker tag $DOCKER_IMAGE $DOCKER_IMAGE_TAG
    - docker push $DOCKER_IMAGE_TAG

push tag:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  needs:
    - build image
  only:
    - tags
  variables:
    DOCKER_IMAGE_TAG: $ZMK_BUILD_IMAGE:$CI_COMMIT_REF_SLUG
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker pull $DOCKER_IMAGE
    - docker tag $DOCKER_IMAGE $DOCKER_IMAGE_TAG
    - docker push $DOCKER_IMAGE_TAG

# Use container image to build firmware
# Keep firmware as artifact
